# Generated by Django 2.2.1 on 2020-06-24 21:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('AccountTypeID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('AddressID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('streetNumber', models.CharField(max_length=5)),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=50)),
                ('postalCode', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('MatchID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('numberOfRounds', models.IntegerField(verbose_name=2)),
                ('wentToFinalRound', models.BooleanField(verbose_name=1)),
            ],
        ),
        migrations.CreateModel(
            name='MatchResultCode',
            fields=[
                ('MatchResultCode', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('OrganizationID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('organizationName', models.CharField(max_length=100)),
                ('organizationShortName', models.CharField(max_length=100)),
                ('phoneNumber', models.IntegerField(verbose_name=15)),
                ('website', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, verbose_name=100)),
                ('additionalInsurees', models.CharField(max_length=1000)),
                ('clubMailRecipients', models.CharField(max_length=100)),
                ('clubEmailRecipients', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('PersonID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('emailAddress', models.EmailField(max_length=254, verbose_name=100)),
                ('lastLoginDateTime', models.DateTimeField(verbose_name=16)),
                ('accountTypeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Person_Account_Type', to='FightScheduler.AccountType', verbose_name='Person Account Type')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('RoleID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('SeriesID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('name', models.CharField(max_length=100)),
                ('organizationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Organization_ID', to='FightScheduler.Organization', verbose_name='Organization ID')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('ServiceID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('code', models.CharField(max_length=30)),
                ('shortName', models.CharField(max_length=30)),
                ('fullName', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('SignatureID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('image', models.BinaryField(max_length=5000000)),
                ('electronicSignature', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='StatusCode',
            fields=[
                ('StatusCode', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('statusCodeName', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Waiver',
            fields=[
                ('WaiverID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='WaiverRequirement',
            fields=[
                ('WaiverRequirementID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('annualRenewalRequired', models.BooleanField(verbose_name=1)),
                ('roleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Role_Requiring_a_Waiver', to='FightScheduler.Role', verbose_name='Role Requiring a Waiver')),
            ],
        ),
        migrations.CreateModel(
            name='SignedWaiver',
            fields=[
                ('SignedWaiverID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('waiverID', models.IntegerField(verbose_name=4)),
                ('signatoryRole', models.CharField(max_length=100)),
                ('signatureDate', models.DateTimeField(verbose_name=16)),
                ('signatureLocation', models.CharField(max_length=100)),
                ('signatoryPersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Signatory_on_Behalf_Of', to='FightScheduler.Person', verbose_name='Signatory on Behalf Of')),
                ('signatureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Signature_ID', to='FightScheduler.Signature', verbose_name='Signature ID')),
                ('waiverFormPersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Waiver_Form_Person', to='FightScheduler.Person', verbose_name='Waiver Form Person')),
            ],
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('ShowID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('addressID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Show_Venue', to='FightScheduler.Address', verbose_name='Show Venue')),
                ('organizingOrganizationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Organizing_Organization_ID', to='FightScheduler.Organization', verbose_name='Organizing Organization ID')),
                ('seriesID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Series_ID', to='FightScheduler.Series', verbose_name='Series ID')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceEnrollment',
            fields=[
                ('ServiceEnrollmentID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('startDate', models.DateField(verbose_name=8)),
                ('endDate', models.DateField(verbose_name=8)),
                ('personID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Enrolled_Person_ID', to='FightScheduler.Person', verbose_name='Enrolled Person ID')),
                ('serviceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Service_ID', to='FightScheduler.Service', verbose_name='Service ID')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('PersonInfoID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('firstName', models.CharField(max_length=100)),
                ('middleName', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('businessPhone', models.IntegerField(verbose_name=30)),
                ('phoneExtension', models.CharField(max_length=30)),
                ('homePhone', models.IntegerField(verbose_name=30)),
                ('cellPhone', models.IntegerField(verbose_name=15)),
                ('fax', models.IntegerField(verbose_name=15)),
                ('citizenship', models.CharField(max_length=30)),
                ('clubName', models.CharField(max_length=100)),
                ('genderCode', models.CharField(max_length=1)),
                ('dateofBirth', models.DateField(verbose_name=8)),
                ('PersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Person_ID_for_Personal_Information', to='FightScheduler.Person', verbose_name='Person ID for Personal Information')),
                ('addressID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Address_of_Person', to='FightScheduler.Address', verbose_name='Address of Person')),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='statusCode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Person_System_Status', to='FightScheduler.StatusCode', verbose_name='Person System Status'),
        ),
        migrations.AddField(
            model_name='organization',
            name='clubCoachPersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Club_Coach_Person', to='FightScheduler.Person', verbose_name='Club Coach Person'),
        ),
        migrations.AddField(
            model_name='organization',
            name='clubOwnerPersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Club_Owner_Person', to='FightScheduler.Person', verbose_name='Club Owner Person'),
        ),
        migrations.AddField(
            model_name='organization',
            name='clubPresidentPersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='President_Person', to='FightScheduler.Person', verbose_name='President Person'),
        ),
        migrations.AddField(
            model_name='organization',
            name='mailingAddressID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Mailing_Address_of_Organization', to='FightScheduler.Address', verbose_name='Mailing Address of Organization'),
        ),
        migrations.AddField(
            model_name='organization',
            name='physicalAddressID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Physical_Address_of_Organization', to='FightScheduler.Address', verbose_name='Physical Address of Organization'),
        ),
        migrations.CreateModel(
            name='NonBoxerInfo',
            fields=[
                ('NonBoxerInfoID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('nccpNum', models.IntegerField(verbose_name=4)),
                ('coachLevel', models.IntegerField(verbose_name=4)),
                ('officialLevel', models.IntegerField(verbose_name=4)),
                ('judgeOnlyPreference', models.BooleanField(verbose_name=1)),
                ('policeRecordsCheckPerformed', models.BooleanField(verbose_name=1)),
                ('policeRecordsCheckExpiry', models.DateField(verbose_name=8)),
                ('PersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Person_ID_for_Additional_Non_Boxer_Info', to='FightScheduler.Person', verbose_name='Person ID for Additional Non Boxer Info')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalCert',
            fields=[
                ('MedicalCertID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('date', models.DateField(verbose_name=8)),
                ('image', models.BinaryField(max_length=5000000)),
                ('PersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Medical_Cert_Person_ID', to='FightScheduler.Person', verbose_name='Medical Cert Person ID')),
            ],
        ),
        migrations.CreateModel(
            name='MatchRound',
            fields=[
                ('MatchRoundID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('roundNumber', models.IntegerField(verbose_name=1)),
                ('redBoxerScore', models.IntegerField(verbose_name=1)),
                ('blueBoxerScore', models.IntegerField(verbose_name=1)),
                ('matchID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Match_ID', to='FightScheduler.Match', verbose_name='Match ID')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='blueBoxerPersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Blue_Corner_Boxer', to='FightScheduler.Person', verbose_name='Blue Corner Boxer'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge1PersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_1_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 1 Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge1Ruling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_1_Winner_Pick_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 1 Winner Pick Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge2PersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_2_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 2 Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge2Ruling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_2_Winner_Pick_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 2 Winner Pick Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge3PersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_3_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 3 Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge3Ruling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_3_Winner_Pick_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 3 Winner Pick Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge4PersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_4_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 4 Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='cornerJudge4Ruling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corner_Judge_4_Winner_Pick_Person_ID', to='FightScheduler.Person', verbose_name='Corner Judge 4 Winner Pick Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='matchResultCode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Match_Result_Code', to='FightScheduler.MatchResultCode', verbose_name='Match Result Code'),
        ),
        migrations.AddField(
            model_name='match',
            name='redBoxerPersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Red_Corner_Boxer', to='FightScheduler.Person', verbose_name='Red Corner Boxer'),
        ),
        migrations.AddField(
            model_name='match',
            name='refereePersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Referee_Person_ID', to='FightScheduler.Person', verbose_name='Referee Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='refereeRuling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Referee_Winner_Pick_Person_ID', to='FightScheduler.Person', verbose_name='Referee Winner Pick Person ID'),
        ),
        migrations.AddField(
            model_name='match',
            name='winnerPersonID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Winning_Boxer_PersonID', to='FightScheduler.Person', verbose_name='Winning Boxer PersonID'),
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('CareerID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('amateurBouts', models.IntegerField(verbose_name=4)),
                ('amateurWins', models.IntegerField(verbose_name=4)),
                ('previousProfessionalCombatSportInvolvement', models.BooleanField(verbose_name=1)),
                ('professionalYears', models.IntegerField(verbose_name=4)),
                ('professionalBouts', models.IntegerField(verbose_name=4)),
                ('professionalWins', models.IntegerField(verbose_name=4)),
                ('previousCombatSportInvolvementInOtherCountry', models.BooleanField(verbose_name=1)),
                ('previousYearsOutofCountry', models.IntegerField(verbose_name=4)),
                ('previousBoutsOutofCountry', models.IntegerField(verbose_name=4)),
                ('previousWinsOutofCountry', models.IntegerField(verbose_name=4)),
                ('previousAmateurCombatSportInvolvement', models.BooleanField(verbose_name=1)),
                ('previousAmateurBouts', models.IntegerField(verbose_name=4)),
                ('previousAmateurWins', models.IntegerField(verbose_name=4)),
                ('previousAmateurKOs', models.IntegerField(verbose_name=4)),
                ('previousAmateurTKOs', models.IntegerField(verbose_name=4)),
                ('PersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Person_ID_for_Career_Info', to='FightScheduler.Person', verbose_name='Person ID for Career Info')),
            ],
        ),
        migrations.CreateModel(
            name='AllowableService',
            fields=[
                ('AlowableServiceID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('RoleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Role_Associated_to_Allowed_Service', to='FightScheduler.Role', verbose_name='Role Associated to Allowed Service')),
                ('ServiceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Service_Associated_to_Allowed_Service', to='FightScheduler.Service', verbose_name='Service Associated to Allowed Service')),
            ],
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('AffiliationID', models.IntegerField(primary_key=True, serialize=False, verbose_name=4)),
                ('PersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Person_Affiliation_to_Organization', to='FightScheduler.Person', verbose_name='Person Affiliation to Organization')),
                ('RoleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Role_ID', to='FightScheduler.Role', verbose_name='Role ID')),
                ('affiliatedOrganizationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Affiliated_Organiation', to='FightScheduler.Organization', verbose_name='Affiliated Organiation')),
                ('affiliatedPersonID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Person_Affiliated_to_Other_Person_in_Organization', to='FightScheduler.Person', verbose_name='Person Affiliated to Other Person in Organization')),
            ],
        ),
    ]
